{"version":3,"file":"static/js/77.b6f4ba4e.chunk.js","mappings":"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","sources":["modules/caged/components/CagedToolBar.tsx","modules/caged/components/CagedContent.tsx","modules/caged/CagedPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Pages } from 'common/routing/pages';\nimport { useTranslation } from 'react-i18next';\nimport { Toolbar } from '../../../common';\nimport { CagedHook, chordGuitarTypes } from '../../../hooks';\nimport { Option, Select } from '@material-tailwind/react';\n\nconst context = Pages.CAGED;\n\nconst CagedToolBar = ({ keys, selectedKey, setSelectedKey, printRef }: CagedHook): JSX.Element => {\n  const { t } = useTranslation('caged');\n  return (\n    <Toolbar\n      page={context}\n      supportedGuitars={chordGuitarTypes}\n      printRef={printRef}\n      tools={[\n        <Select\n          key={'chord-note'}\n          label={t('common:key')}\n          className=\"flex items-center bg-white z-40\"\n          selected={(value) => {\n            if (value?.key && value?.key !== selectedKey) {\n              setSelectedKey(value?.key?.toString());\n            }\n            return value;\n          }}\n        >\n          {keys.map((noteOption) => (\n            <Option key={noteOption}>{noteOption}</Option>\n          ))}\n        </Select>,\n      ]}\n    />\n  );\n};\n\nexport default CagedToolBar;\n","import React from 'react';\nimport { CagedHook, useSettings } from '../../../hooks';\nimport { Typography } from '@material-tailwind/react';\nimport { Diagram, DotText, FretNumberPosition } from '../../../common/fretboard';\n\nconst CagedContent = ({\n  selectedKey,\n  cagedChords,\n  printRef,\n  printStyle,\n}: CagedHook): JSX.Element => {\n  const { orientation } = useSettings();\n\n  return (\n    <div className=\"flex flex-initial flex-col items-center\" id=\"caged-content\" ref={printRef}>\n      {cagedChords && (\n        <div>\n          <style type=\"text/css\" media=\"print\">\n            {printStyle(orientation)}\n          </style>\n          <div className=\"flex flex-row\" id=\"caged-C\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-blue-700\">C</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Open`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Positioned ${selectedKey}`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-blue-700 fill-blue-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-A\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-red-700\">A</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-red-700 fill-red-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-G\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-green-700\">G</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-g'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-green-700 fill-green-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-E\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-orange-800\">E</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-e'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-orange-800 fill-orange-800'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-D\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-deep-purple-700\">D</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-deep-purple-700 fill-deep-purple-700'}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CagedContent;\n","import React, { useRef } from 'react';\nimport { useCaged } from '../../hooks';\nimport '../../common/Page.css';\nimport CagedToolBar from './components/CagedToolBar';\nimport CagedContent from './components/CagedContent';\n\nconst CagedPage = (): JSX.Element => {\n  const printRef = useRef<HTMLDivElement>(null);\n  const hook = useCaged({ printRef });\n\n  return (\n    <div className=\"page\" id=\"caged-page\">\n      <CagedToolBar {...hook} />\n      <CagedContent {...hook} />\n    </div>\n  );\n};\n\nexport default CagedPage;\n"],"names":["context","Pages","keys","selectedKey","setSelectedKey","printRef","t","useTranslation","page","supportedGuitars","chordGuitarTypes","tools","Select","label","className","selected","value","key","toString","map","noteOption","Option","cagedChords","printStyle","orientation","useSettings","id","ref","type","media","Typography","diagramCount","text","DotText","chord","C","open","fretNumbersPosition","FretNumberPosition","positioned","cagedColor","A","G","E","D","useRef","hook","useCaged"],"sourceRoot":""}