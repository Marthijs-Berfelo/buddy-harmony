{"version":3,"file":"static/js/969.02f94e27.chunk.js","mappings":"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","sources":["modules/caged/hooks/caged-constants.ts","modules/caged/hooks/use-caged.ts","modules/caged/components/CagedToolBar.tsx","modules/caged/components/CagedContent.tsx","modules/caged/CagedPage.tsx"],"sourcesContent":["import { ChordPosition } from '../../../hooks';\n\nexport interface CagedPositionConfig {\n  key: string;\n  position: number;\n  root: string;\n  rootString: number;\n}\n\nexport interface CagedKeyConfig {\n  open: CagedPositionConfig;\n  base: CagedPositionConfig;\n}\n\nexport interface CagedKey {\n  open: CagedChordPosition;\n  base: CagedChordPosition;\n  positioned: CagedChordPosition;\n}\n\nexport interface CagedChords {\n  C: CagedKey;\n  A: CagedKey;\n  G: CagedKey;\n  E: CagedKey;\n  D: CagedKey;\n}\n\nexport const cagedConfig: CagedConfig = {\n  C: {\n    open: {\n      key: 'C',\n      position: 0,\n      root: 'C3',\n      rootString: 1,\n    },\n    base: {\n      key: 'D',\n      position: 1,\n      root: 'D3',\n      rootString: 1,\n    },\n  },\n  A: {\n    open: {\n      key: 'A',\n      position: 0,\n      root: 'A2',\n      rootString: 1,\n    },\n    base: {\n      key: 'B',\n      position: 0,\n      root: 'B2',\n      rootString: 1,\n    },\n  },\n  G: {\n    open: {\n      key: 'G',\n      position: 0,\n      root: 'G2',\n      rootString: 0,\n    },\n    base: {\n      key: 'C',\n      position: 2,\n      root: 'C3',\n      rootString: 0,\n    },\n  },\n  E: {\n    open: {\n      key: 'E',\n      position: 0,\n      root: 'E2',\n      rootString: 0,\n    },\n    base: {\n      key: 'F',\n      position: 0,\n      root: 'F2',\n      rootString: 0,\n    },\n  },\n  D: {\n    open: {\n      key: 'D',\n      position: 0,\n      root: 'D3',\n      rootString: 2,\n    },\n    base: {\n      key: 'E',\n      position: 1,\n      root: 'E3',\n      rootString: 2,\n    },\n  },\n};\n\ninterface CagedChordPosition extends CagedPositionConfig {\n  chord: ChordPosition;\n}\n\ninterface CagedConfig {\n  C: CagedKeyConfig;\n  A: CagedKeyConfig;\n  G: CagedKeyConfig;\n  E: CagedKeyConfig;\n  D: CagedKeyConfig;\n}\n","import { Interval, transpose } from '@tonaljs/tonal';\nimport { useEffect, useState } from 'react';\nimport {\n  chordGuitarTypes,\n  GuitarType,\n  Printable,\n  PrintableProps,\n  StringTuningType,\n  cagedChordsForKey,\n  ChordDetail,\n  ChordsHook,\n  chordModels,\n  ChordPosition,\n  handleSelectionForChords,\n  KeysHook,\n  useKeys,\n  useSettings,\n} from '../../../hooks';\nimport {\n  CagedChords,\n  cagedConfig,\n  CagedKey,\n  CagedKeyConfig,\n  CagedPositionConfig,\n} from './caged-constants';\nimport { Orientation } from '../../../common/fretboard';\n\nexport interface CagedHook extends KeysHook, ChordsHook, Printable {\n  cagedChords?: CagedChords;\n}\n\nconst isSupportedType = (guitar: GuitarType): boolean =>\n  chordGuitarTypes.findIndex((type) => type.name === guitar.name) > -1;\n\nexport const useCaged = ({ printRef }: PrintableProps): CagedHook => {\n  const { keys, selectedKey, setSelectedKey } = useKeys();\n  const { guitarType, tuningType } = useSettings();\n  const [chords, setChords] = useState<ChordDetail[]>([]);\n  const [chord, setChord] = useState<ChordDetail>();\n  const [cagedChords, setCagedChords] = useState<CagedChords>();\n\n  useEffect(() => {\n    if (!!chord) {\n      const caged = buildCagedChords(chord.key, chord.suffix, tuningType, guitarType);\n      setCagedChords(caged);\n    } else {\n      setCagedChords(undefined);\n    }\n  }, [chord]);\n\n  useEffect(() => {\n    handleSelectionForChords(\n      guitarType,\n      selectedKey,\n      isSupportedType,\n      cagedChordsForKey,\n      setChords,\n      setChord,\n      chord\n    );\n  }, [guitarType, selectedKey]);\n\n  const printStyle = (orientation: Orientation): string =>\n    `@page: { size: A4 ${\n      orientation === Orientation.HORIZONTAL ? 'portrait' : 'portrait'\n    }, margin: 0mm 30mm 30mm 30mm }`;\n\n  return {\n    keys,\n    selectedKey,\n    setSelectedKey,\n    chords,\n    chord,\n    setChord,\n    cagedChords,\n    printRef,\n    printStyle,\n  };\n};\n\nconst buildCagedChords = (\n  key: string,\n  type: string,\n  tuning: StringTuningType,\n  guitarType: GuitarType\n): CagedChords => ({\n  C: buildCagedKey(key, type, cagedConfig.C, tuning, guitarType),\n  A: buildCagedKey(key, type, cagedConfig.A, tuning, guitarType),\n  G: buildCagedKey(key, type, cagedConfig.G, tuning, guitarType),\n  E: buildCagedKey(key, type, cagedConfig.E, tuning, guitarType),\n  D: buildCagedKey(key, type, cagedConfig.D, tuning, guitarType),\n});\n\nconst buildCagedKey = (\n  key: string,\n  type: string,\n  config: CagedKeyConfig,\n  tuning: StringTuningType,\n  guitarType: GuitarType\n): CagedKey => {\n  const openChord = cagedChord(config.open, guitarType, type);\n  const baseChord = cagedChord(config.base, guitarType, type);\n  const positionedChord = addNotes(\n    Object.assign({}, baseChord, {\n      baseFret: baseFret(key, baseChord, config),\n    }),\n    tuning\n  );\n\n  return {\n    open: Object.assign({}, config.open, { chord: openChord }),\n    base: Object.assign({}, config.base, { chord: baseChord }),\n    positioned: Object.assign({}, config.base, { chord: positionedChord }),\n  };\n};\n\nconst cagedChord = (\n  position: CagedPositionConfig,\n  guitarType: GuitarType,\n  type: string\n): ChordPosition => {\n  const models = chordModels(guitarType.name, position.key, type);\n  if (models.length > 0) {\n    const chord = models[0];\n    return chord.positions[position.position];\n  } else {\n    throw new Error(`No chord for position [${position.key} | ${type} | ${guitarType.name}]`);\n  }\n};\n\nconst addNotes = (chord: ChordPosition, tuning: StringTuningType): ChordPosition => {\n  const notes = chord.frets\n    .map((fret) => fret + chord.baseFret - 1)\n    .map(Interval.fromSemitones)\n    .map((interval, index) => transpose(tuning.tuning[index], interval));\n  return Object.assign({}, chord, { notes });\n};\n\nconst baseFret = (key: string, baseChord: ChordPosition, config: CagedKeyConfig): number => {\n  const baseFret =\n    baseChord.baseFret + fretDistance(keyRoot(key, config.base.rootString), config.base.root);\n  if (baseFret < 1) {\n    return baseFret + 12;\n  }\n  return baseFret;\n};\n\nconst keyRoot = (key: string, stringRoot: number): string => {\n  if (inSecondOctaveOnFirstString(stringRoot, key)) {\n    return `${key}2`;\n  } else if (inSecondOctaveOnSecondString(stringRoot, key)) {\n    return `${key}2`;\n  } else if (inFourthOctaveOnThirdString(stringRoot, key)) {\n    return `${key}4`;\n  } else {\n    return `${key}3`;\n  }\n};\n\nfunction inSecondOctaveOnFirstString(stringRoot: number, key: string) {\n  return stringRoot === 0 && ['E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'].includes(key);\n}\n\nfunction inSecondOctaveOnSecondString(stringRoot: number, key: string) {\n  return stringRoot === 1 && ['A', 'Bb', 'B'].includes(key);\n}\n\nfunction inFourthOctaveOnThirdString(stringRoot: number, key: string) {\n  return stringRoot === 2 && ['C', 'C#', 'D'].includes(key);\n}\n\nconst fretDistance = (keyRoot: string, chordRoot: string): number => {\n  const intervalLiteral = Interval.distance(chordRoot, keyRoot);\n  return Interval.semitones(intervalLiteral) || 0;\n};\n","import React from 'react';\nimport { Pages } from 'common/routing/pages';\nimport { ChordSelector, KeySelector, Toolbar } from '../../../common';\nimport { chordGuitarTypes } from '../../../hooks';\nimport { CagedHook } from '../hooks';\n\nconst context = Pages.CAGED;\n\nconst CagedToolBar = ({\n  keys,\n  selectedKey,\n  setSelectedKey,\n  chords,\n  chord,\n  setChord,\n  printRef,\n}: CagedHook): JSX.Element => {\n  return (\n    <Toolbar\n      page={context}\n      supportedGuitars={chordGuitarTypes}\n      printRef={printRef}\n      printDisabled={!chord}\n      tools={[\n        <KeySelector key={'caged-key'} {...{ keys, selectedKey, setSelectedKey }} />,\n        <ChordSelector key={'caged-chord'} {...{ chords, chord, setChord }} />,\n      ]}\n    />\n  );\n};\n\nexport default CagedToolBar;\n","import React from 'react';\nimport { useSettings } from '../../../hooks';\nimport { Typography } from '@material-tailwind/react';\nimport { Diagram, DotText, FretNumberPosition } from '../../../common/fretboard';\nimport { CagedHook } from '../hooks';\n\nconst CagedContent = ({\n  selectedKey,\n  cagedChords,\n  printRef,\n  printStyle,\n}: CagedHook): JSX.Element => {\n  const { orientation } = useSettings();\n\n  return (\n    <div className=\"flex flex-initial flex-col items-center\" id=\"caged-content\" ref={printRef}>\n      {cagedChords && (\n        <div>\n          <style type=\"text/css\" media=\"print\">\n            {printStyle(orientation)}\n          </style>\n          <div className=\"flex flex-row\" id=\"caged-C\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-blue-700\">C</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Open`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Positioned ${selectedKey}`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-blue-700 fill-blue-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-A\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-red-700\">A</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-red-700 fill-red-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-G\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-green-700\">G</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-g'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-green-700 fill-green-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-E\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-orange-800\">E</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-e'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-orange-800 fill-orange-800'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-D\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-deep-purple-700\">D</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-deep-purple-700 fill-deep-purple-700'}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CagedContent;\n","import React, { useRef } from 'react';\nimport { useCaged } from './hooks';\nimport '../../common/Page.css';\nimport CagedToolBar from './components/CagedToolBar';\nimport CagedContent from './components/CagedContent';\n\nconst CagedPage = (): JSX.Element => {\n  const printRef = useRef<HTMLDivElement>(null);\n  const hook = useCaged({ printRef });\n\n  return (\n    <div className=\"page\" id=\"caged-page\">\n      <CagedToolBar {...hook} />\n      <CagedContent {...hook} />\n    </div>\n  );\n};\n\nexport default CagedPage;\n"],"names":["cagedConfig","open","key","position","root","rootString","base","isSupportedType","guitar","chordGuitarTypes","type","name","buildCagedChords","tuning","guitarType","C","buildCagedKey","A","G","E","D","config","openChord","cagedChord","baseChord","positionedChord","addNotes","Object","assign","baseFret","chord","positioned","models","chordModels","length","positions","Error","notes","frets","map","fret","Interval","interval","index","transpose","fretDistance","keyRoot","stringRoot","includes","inSecondOctaveOnFirstString","inSecondOctaveOnSecondString","inFourthOctaveOnThirdString","chordRoot","intervalLiteral","context","Pages","keys","selectedKey","setSelectedKey","chords","setChord","printRef","page","supportedGuitars","printDisabled","tools","cagedChords","printStyle","orientation","useSettings","className","id","ref","media","Typography","diagramCount","text","DotText","fretNumbersPosition","FretNumberPosition","cagedColor","hook","useKeys","tuningType","useState","setChords","setCagedChords","useEffect","caged","suffix","undefined","handleSelectionForChords","cagedChordsForKey","Orientation","useCaged","useRef"],"sourceRoot":""}