{"version":3,"file":"static/js/230.f9ccfe8a.chunk.js","mappings":"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","sources":["modules/caged/hooks/caged-constants.ts","modules/caged/hooks/caged-utils.ts","modules/caged/hooks/use-caged.ts","modules/caged/components/CagedToolBar.tsx","modules/caged/components/CagedContent.tsx","modules/caged/CagedPage.tsx"],"sourcesContent":["import { ChordPosition } from '../../../hooks';\n\nexport interface CagedPositionConfig {\n  key: string;\n  position: number;\n  root: string;\n  rootString: number;\n}\n\nexport interface CagedKeyConfig {\n  open: CagedPositionConfig;\n  base: CagedPositionConfig;\n}\n\nexport interface CagedKey {\n  open: CagedChordPosition;\n  base: CagedChordPosition;\n  positioned: CagedChordPosition;\n}\n\nexport interface CagedChords {\n  C: CagedKey;\n  A: CagedKey;\n  G: CagedKey;\n  E: CagedKey;\n  D: CagedKey;\n}\n\nexport interface CagedConfig {\n  C: CagedKeyConfig;\n  A: CagedKeyConfig;\n  G: CagedKeyConfig;\n  E: CagedKeyConfig;\n  D: CagedKeyConfig;\n}\n\nexport const majorCagedConfig: CagedConfig = {\n  C: {\n    open: {\n      key: 'C',\n      position: 0,\n      root: 'C3',\n      rootString: 1,\n    },\n    base: {\n      key: 'D',\n      position: 1,\n      root: 'D3',\n      rootString: 1,\n    },\n  },\n  A: {\n    open: {\n      key: 'A',\n      position: 0,\n      root: 'A2',\n      rootString: 1,\n    },\n    base: {\n      key: 'B',\n      position: 0,\n      root: 'B2',\n      rootString: 1,\n    },\n  },\n  G: {\n    open: {\n      key: 'G',\n      position: 0,\n      root: 'G2',\n      rootString: 0,\n    },\n    base: {\n      key: 'C',\n      position: 2,\n      root: 'C3',\n      rootString: 0,\n    },\n  },\n  E: {\n    open: {\n      key: 'E',\n      position: 0,\n      root: 'E2',\n      rootString: 0,\n    },\n    base: {\n      key: 'F',\n      position: 0,\n      root: 'F2',\n      rootString: 0,\n    },\n  },\n  D: {\n    open: {\n      key: 'D',\n      position: 0,\n      root: 'D3',\n      rootString: 2,\n    },\n    base: {\n      key: 'E',\n      position: 1,\n      root: 'E3',\n      rootString: 2,\n    },\n  },\n};\n\nexport const cagedConfigs = new Map<string, CagedConfig>([\n  ['major', majorCagedConfig],\n  [\n    'minor',\n    {\n      C: {\n        open: {\n          key: 'C',\n          position: 0,\n          root: 'C3',\n          rootString: 1,\n        },\n        base: {\n          key: 'C',\n          position: 0,\n          root: 'C3',\n          rootString: 1,\n        },\n      },\n      A: {\n        open: {\n          key: 'A',\n          position: 0,\n          root: 'A2',\n          rootString: 1,\n        },\n        base: {\n          key: 'B',\n          position: 0,\n          root: 'B2',\n          rootString: 1,\n        },\n      },\n      G: {\n        open: {\n          key: 'G',\n          position: 0,\n          root: 'G2',\n          rootString: 0,\n        },\n        base: {\n          key: 'C',\n          position: 2,\n          root: 'C3',\n          rootString: 0,\n        },\n      },\n      E: {\n        open: {\n          key: 'E',\n          position: 0,\n          root: 'E2',\n          rootString: 0,\n        },\n        base: {\n          key: 'F',\n          position: 0,\n          root: 'F2',\n          rootString: 0,\n        },\n      },\n      D: {\n        open: {\n          key: 'D',\n          position: 0,\n          root: 'D3',\n          rootString: 2,\n        },\n        base: {\n          key: 'F',\n          position: 1,\n          root: 'F3',\n          rootString: 2,\n        },\n      },\n    },\n  ],\n  [\n    '7',\n    {\n      C: {\n        open: {\n          key: 'C',\n          position: 0,\n          root: 'C3',\n          rootString: 1,\n        },\n        base: {\n          key: 'E',\n          position: 1,\n          root: 'E3',\n          rootString: 1,\n        },\n      },\n      A: {\n        open: {\n          key: 'A',\n          position: 0,\n          root: 'A2',\n          rootString: 1,\n        },\n        base: {\n          key: 'C',\n          position: 1,\n          root: 'C3',\n          rootString: 1,\n        },\n      },\n      G: {\n        open: {\n          key: 'G',\n          position: 0,\n          root: 'G2',\n          rootString: 0,\n        },\n        base: {\n          key: 'C',\n          position: 2,\n          root: 'C3',\n          rootString: 0,\n        },\n      },\n      E: {\n        open: {\n          key: 'E',\n          position: 0,\n          root: 'E2',\n          rootString: 0,\n        },\n        base: {\n          key: 'F',\n          position: 0,\n          root: 'F2',\n          rootString: 0,\n        },\n      },\n      D: {\n        open: {\n          key: 'D',\n          position: 0,\n          root: 'D3',\n          rootString: 2,\n        },\n        base: {\n          key: 'F',\n          position: 1,\n          root: 'F3',\n          rootString: 2,\n        },\n      },\n    },\n  ],\n]);\n\ninterface CagedChordPosition extends CagedPositionConfig {\n  chord: ChordPosition;\n}\n","import {\n  CagedChords,\n  CagedConfig,\n  CagedKey,\n  CagedKeyConfig,\n  CagedPositionConfig,\n} from './caged-constants';\nimport {\n  ChordDetail,\n  chordModels,\n  chordNamesForKey,\n  ChordPosition,\n  chordsForKey,\n  GuitarType,\n  StringTuningType,\n} from '../../../hooks';\nimport { Interval, transpose } from '@tonaljs/tonal';\n\nexport const cagedChordsForKey =\n  (cagedChordTypes: string[]): ((instrument: string, key: string) => ChordDetail[]) =>\n  (instrument, key) =>\n    chordsForKey(instrument, key)\n      .filter((chord) => cagedChordTypes.includes(chord.suffix))\n      .filter((chord) => chordNamesForKey(instrument, 'C').includes(chord.suffix))\n      .filter((chord) => chordNamesForKey(instrument, 'A').includes(chord.suffix))\n      .filter((chord) => chordNamesForKey(instrument, 'G').includes(chord.suffix))\n      .filter((chord) => chordNamesForKey(instrument, 'E').includes(chord.suffix))\n      .filter((chord) => chordNamesForKey(instrument, 'D').includes(chord.suffix));\n\nexport const buildCagedChords = (\n  key: string,\n  type: string,\n  config: CagedConfig,\n  tuning: StringTuningType,\n  guitarType: GuitarType\n): CagedChords => ({\n  C: buildCagedKey(key, type, config.C, tuning, guitarType),\n  A: buildCagedKey(key, type, config.A, tuning, guitarType),\n  G: buildCagedKey(key, type, config.G, tuning, guitarType),\n  E: buildCagedKey(key, type, config.E, tuning, guitarType),\n  D: buildCagedKey(key, type, config.D, tuning, guitarType),\n});\n\nconst buildCagedKey = (\n  key: string,\n  type: string,\n  config: CagedKeyConfig,\n  tuning: StringTuningType,\n  guitarType: GuitarType\n): CagedKey => {\n  const openChord = cagedChord(config.open, guitarType, type);\n  const baseChord = cagedChord(config.base, guitarType, type);\n  const positionedChord = addNotes(\n    Object.assign({}, baseChord, {\n      baseFret: baseFret(key, baseChord, config),\n    }),\n    tuning\n  );\n\n  return {\n    open: Object.assign({}, config.open, { chord: openChord }),\n    base: Object.assign({}, config.base, { chord: baseChord }),\n    positioned: Object.assign({}, config.base, { chord: positionedChord }),\n  };\n};\n\nconst cagedChord = (\n  position: CagedPositionConfig,\n  guitarType: GuitarType,\n  type: string\n): ChordPosition => {\n  const models = chordModels(guitarType.name, position.key, type);\n  if (models.length > 0) {\n    const chord = models[0];\n    return chord.positions[position.position];\n  } else {\n    throw new Error(`No chord for position [${position.key} | ${type} | ${guitarType.name}]`);\n  }\n};\n\nconst addNotes = (chord: ChordPosition, tuning: StringTuningType): ChordPosition => {\n  const notes = chord.frets\n    .map((fret) => fret + chord.baseFret - 1)\n    .map(Interval.fromSemitones)\n    .map((interval, index) => transpose(tuning.tuning[index], interval));\n  return Object.assign({}, chord, { notes });\n};\n\nconst baseFret = (key: string, baseChord: ChordPosition, config: CagedKeyConfig): number => {\n  const baseFret =\n    baseChord.baseFret + fretDistance(keyRoot(key, config.base.rootString), config.base.root);\n  console.log('Base fret', baseFret, baseChord, config);\n  if (baseFret < 1) {\n    return baseFret + 12;\n  }\n  return baseFret;\n};\n\nconst keyRoot = (key: string, stringRoot: number): string => {\n  if (inSecondOctaveOnFirstString(stringRoot, key)) {\n    return `${key}2`;\n  } else if (inSecondOctaveOnSecondString(stringRoot, key)) {\n    return `${key}2`;\n  } else if (inFourthOctaveOnThirdString(stringRoot, key)) {\n    return `${key}4`;\n  } else {\n    return `${key}3`;\n  }\n};\n\nconst inSecondOctaveOnFirstString = (stringRoot: number, key: string): boolean =>\n  stringRoot === 0 && ['E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'].includes(key);\n\nconst inSecondOctaveOnSecondString = (stringRoot: number, key: string): boolean =>\n  stringRoot === 1 && ['A', 'Bb', 'B'].includes(key);\n\nconst inFourthOctaveOnThirdString = (stringRoot: number, key: string): boolean =>\n  stringRoot === 2 && ['C', 'C#', 'D'].includes(key);\n\nconst fretDistance = (keyRoot: string, chordRoot: string): number => {\n  const intervalLiteral = Interval.distance(chordRoot, keyRoot);\n  return Interval.semitones(intervalLiteral) || 0;\n};\n\nexport const test_export = {\n  buildCagedKey,\n  cagedChord,\n  addNotes,\n  baseFret,\n  keyRoot,\n};\n","import { useEffect, useState } from 'react';\nimport {\n  chordGuitarTypes,\n  GuitarType,\n  Printable,\n  PrintableProps,\n  ChordDetail,\n  ChordsHook,\n  handleSelectionForChords,\n  KeysHook,\n  useKeys,\n  useSettings,\n} from '../../../hooks';\nimport { CagedChords, cagedConfigs, CagedConfig } from './caged-constants';\nimport { Orientation } from '../../../common/fretboard';\nimport { buildCagedChords, cagedChordsForKey } from './caged-utils';\n\nexport interface CagedHook extends KeysHook, ChordsHook, Printable {\n  cagedChords?: CagedChords;\n}\n\nconst isSupportedType = (guitar: GuitarType): boolean =>\n  chordGuitarTypes.findIndex((type) => type.name === guitar.name) > -1;\n\nexport const useCaged = ({ printRef }: PrintableProps): CagedHook => {\n  const { keys, selectedKey, setSelectedKey } = useKeys();\n  const { guitarType, tuningType } = useSettings();\n  const [chords, setChords] = useState<ChordDetail[]>([]);\n  const [chord, setChord] = useState<ChordDetail>();\n  const [cagedConfig, setCagedConfig] = useState<CagedConfig>();\n  const [cagedChords, setCagedChords] = useState<CagedChords>();\n\n  useEffect(() => {\n    if (!!cagedConfig && !!chord) {\n      const caged = buildCagedChords(chord.key, chord.suffix, cagedConfig, tuningType, guitarType);\n      setCagedChords(caged);\n    } else {\n      setCagedChords(undefined);\n    }\n  }, [chord, cagedConfig]);\n\n  useEffect(() => {\n    if (!!chord) {\n      setCagedConfig(cagedConfigs.get(chord.suffix));\n    } else {\n      setCagedChords(undefined);\n    }\n  }, [chord]);\n\n  useEffect(() => {\n    handleSelectionForChords(\n      guitarType,\n      selectedKey,\n      isSupportedType,\n      cagedChordsForKey(Array.from(cagedConfigs.keys())),\n      setChords,\n      setChord,\n      chord\n    );\n  }, [guitarType, selectedKey]);\n\n  const printStyle = (orientation: Orientation): string =>\n    `@page: { size: A4 ${\n      orientation === Orientation.HORIZONTAL ? 'portrait' : 'portrait'\n    }, margin: 0mm 30mm 30mm 30mm }`;\n\n  return {\n    keys,\n    selectedKey,\n    setSelectedKey,\n    chords,\n    chord,\n    setChord,\n    cagedChords,\n    printRef,\n    printStyle,\n  };\n};\n","import React from 'react';\nimport { Pages } from 'common/routing/pages';\nimport { ChordSelector, KeySelector, Toolbar } from '../../../common';\nimport { chordGuitarTypes } from '../../../hooks';\nimport { CagedHook } from '../hooks';\n\nconst context = Pages.CAGED;\n\nconst CagedToolBar = ({\n  keys,\n  selectedKey,\n  setSelectedKey,\n  chords,\n  chord,\n  setChord,\n  printRef,\n}: CagedHook): JSX.Element => {\n  return (\n    <Toolbar\n      page={context}\n      supportedGuitars={chordGuitarTypes}\n      printRef={printRef}\n      printDisabled={!chord}\n      tools={[\n        <KeySelector key={'caged-key'} {...{ keys, selectedKey, setSelectedKey }} />,\n        <ChordSelector key={'caged-chord'} {...{ chords, chord, setChord }} />,\n      ]}\n    />\n  );\n};\n\nexport default CagedToolBar;\n","import React from 'react';\nimport { useSettings } from '../../../hooks';\nimport { Typography } from '@material-tailwind/react';\nimport { Diagram, DotText, FretNumberPosition } from '../../../common/fretboard';\nimport { CagedHook } from '../hooks';\n\nconst CagedContent = ({\n  selectedKey,\n  cagedChords,\n  printRef,\n  printStyle,\n}: CagedHook): JSX.Element => {\n  const { orientation } = useSettings();\n\n  return (\n    <div className=\"flex flex-initial flex-col items-center\" id=\"caged-content\" ref={printRef}>\n      {cagedChords && (\n        <div>\n          <style type=\"text/css\" media=\"print\">\n            {printStyle(orientation)}\n          </style>\n          <div className=\"flex flex-row\" id=\"caged-C\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-blue-700\">C</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Open`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Typography className=\"text-2xl\">{`Positioned ${selectedKey}`}</Typography>\n              </div>\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.C.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-blue-700 fill-blue-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-A\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-red-700\">A</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-a'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.A.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-red-700 fill-red-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-G\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-green-700\">G</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-g'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.G.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-green-700 fill-green-700'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-E\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-orange-800\">E</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-c'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-e'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.E.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-orange-800 fill-orange-800'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\" id=\"caged-D\">\n            <div className=\"flex flex-col justify-evenly\" id=\"caged-step\">\n              <Typography className=\"text-4xl font-extrabold text-deep-purple-700\">D</Typography>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-open-c\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'open-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.open.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col items-center justify-start\" id=\"caged-chord\">\n              <div className=\"flex flex-row items-center\">\n                <Diagram\n                  key={'positioned-d'}\n                  className=\"\"\n                  diagramCount={1}\n                  text={DotText.NOTE}\n                  chord={cagedChords.D.positioned.chord}\n                  fretNumbersPosition={FretNumberPosition.LEFT}\n                  cagedColor={'stroke-deep-purple-700 fill-deep-purple-700'}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CagedContent;\n","import React, { useRef } from 'react';\nimport { useCaged } from './hooks';\nimport '../../common/Page.css';\nimport CagedToolBar from './components/CagedToolBar';\nimport CagedContent from './components/CagedContent';\n\nconst CagedPage = (): JSX.Element => {\n  const printRef = useRef<HTMLDivElement>(null);\n  const hook = useCaged({ printRef });\n\n  return (\n    <div className=\"page\" id=\"caged-page\">\n      <CagedToolBar {...hook} />\n      <CagedContent {...hook} />\n    </div>\n  );\n};\n\nexport default CagedPage;\n"],"names":["cagedConfigs","Map","C","open","key","position","root","rootString","base","A","G","E","D","buildCagedKey","type","config","tuning","guitarType","openChord","cagedChord","baseChord","positionedChord","addNotes","Object","assign","baseFret","chord","positioned","models","chordModels","name","length","positions","Error","notes","frets","map","fret","Interval","interval","index","transpose","fretDistance","keyRoot","console","log","stringRoot","inSecondOctaveOnFirstString","inSecondOctaveOnSecondString","inFourthOctaveOnThirdString","includes","chordRoot","intervalLiteral","isSupportedType","guitar","chordGuitarTypes","useCaged","printRef","useKeys","keys","selectedKey","setSelectedKey","useSettings","tuningType","useState","chords","setChords","setChord","cagedConfig","setCagedConfig","cagedChords","setCagedChords","useEffect","caged","buildCagedChords","suffix","undefined","get","cagedChordTypes","handleSelectionForChords","Array","from","instrument","chordsForKey","filter","chordNamesForKey","printStyle","orientation","Orientation","context","Pages","page","supportedGuitars","printDisabled","tools","className","id","ref","media","Typography","diagramCount","text","DotText","fretNumbersPosition","FretNumberPosition","cagedColor","useRef","hook"],"sourceRoot":""}